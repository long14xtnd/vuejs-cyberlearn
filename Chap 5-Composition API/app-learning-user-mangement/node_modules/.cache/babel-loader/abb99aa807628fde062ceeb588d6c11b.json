{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_user_item = _resolveComponent(\"user-item\");\n\n  return _openBlock(), _createElementBlock(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.userListBySearchName, (user, index) => {\n    return _openBlock(), _createBlock(_component_user_item, {\n      key: index,\n      user: user\n    }, null, 8\n    /* PROPS */\n    , [\"user\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createCommentVNode(\" <user-item></user-item>\\r\\n    <user-item></user-item>\\r\\n    <user-item></user-item>\\r\\n    <user-item></user-item> \")]);\n}","map":{"version":3,"mappings":";;;;uBACEA,oBAUQ,OAVR,EAUQ,IAVR,EAUQ,oBATNA,oBAIaC,SAJb,EAIa,IAJb,EAIaC,YAHaC,yBAGb,EAHiC,CAApCC,IAAoC,EAA9BC,KAA8B,KAAzB;yBADrBC,aAIaC,oBAJb,EAIa;AAFVC,SAAG,EAAEH,KAEK;AADVD,UAAI,EAAEA;AACI,KAJb;;AAAA;GAIa,CAJb;;AAAA,GASM,GAJNK,6IAIM,CAVR","names":["_createElementBlock","_Fragment","_renderList","_ctx","user","index","_createBlock","_component_user_item","key","_createCommentVNode"],"sourceRoot":"","sources":["C:\\Users\\long.dh\\Desktop\\learn-vue3\\vuejs-cyberlearn\\Chap 5-Composition API\\app-learning-user-mangement\\src\\components\\UserList.vue"],"sourcesContent":["<template>\r\n  <tbody>\r\n    <user-item\r\n      v-for=\"(user, index) in userListBySearchName\"\r\n      :key=\"index\"\r\n      :user=\"user\"\r\n    ></user-item>\r\n    <!-- <user-item></user-item>\r\n    <user-item></user-item>\r\n    <user-item></user-item>\r\n    <user-item></user-item> -->\r\n  </tbody>\r\n</template>\r\n\r\n<script>\r\nimport UserItem from \"./UserItem.vue\";\r\nimport { useStore } from \"vuex\";\r\nimport { computed } from \"vue\";\r\n// import { createNamespacedHelpers } from \"vuex\";\r\n// const { mapGetters, mapState, mapActions } = createNamespacedHelpers(\"user\");\r\n\r\nexport default {\r\n  components: {\r\n    UserItem,\r\n  },\r\n  setup() {\r\n    const store = useStore();\r\n\r\n    function loading() {\r\n      return false;\r\n    }\r\n\r\n    function userListByBoy() {\r\n      return store.getters.userListByBoy;\r\n    }\r\n  function userListFilterBoy(){\r\n    store.commit(\"userListByBoy\")\r\n  }\r\n    function getAllUser() {\r\n      store.dispatch(\"user/getAllUserAction\");\r\n    }\r\n\r\n    return { getAllUser, loading ,userListByBoy};\r\n  },\r\n  // computed:{\r\n  //   userList(){\r\n  //     return this.$store.state.userLis\r\n  //   }\r\n  // }\r\n  //====Cách viết mapState theo kiểu mảng ====\r\n  // computed: mapState([\"userList\"]),\r\n  //=======Cách viết mapState hay được sử dụng nhất======\r\n  computed: {\r\n    // loading() {\r\n    //   return false;\r\n    // },\r\n    // userListByBoy() {\r\n    //   return this.$store.getters.userListByBoy;\r\n    // },\r\n    ...mapGetters({\r\n      userListFilterBoy: \"userListByBoy\",\r\n      userListBySearchName: \"userListBySearchName\",\r\n    }),\r\n    //*** viết có dấu ... như này để phân biệt mapState và có thể viểt các computed khác do người dùng tự tạo */\r\n    ...mapState({\r\n      //trong vuejs nó khuyên chúng ta hạn chế cách dùng là this.$store để gọi dữ liệu vì store dữ liệu rất lớn truy cập kiểu như thế là ko nên\r\n      //chính vì thế nó mới sinh ra một thằng có tên là mapState để ta truy xuất dữ liệu\r\n      //(state) chỗ này tương đương với this.$store.state\r\n      userList: (state) => state.userList,\r\n      // userList : \"userList\" //Đây là cách viết khác nhưng ko nên dùng\r\n    }),\r\n  },\r\n  // methods: {\r\n  //   ...mapActions({\r\n  //     getAllUser: \"getAllUserAction\",\r\n  //   }),\r\n  // },\r\n\r\n  /**tại sao lại dùng lifecycle created\r\n   * vì khi chúng ta dùng created thì những cái data,state,vuex component nó đã tồn tại rồi thì code tại đây sẽ hạn chế\r\n   * hết mức có thể và sau này có cập nhật nó vào cái biến gì đó nó cũng ko bị lỗi\r\n   */\r\n  created() {\r\n    this.getAllUser();\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}