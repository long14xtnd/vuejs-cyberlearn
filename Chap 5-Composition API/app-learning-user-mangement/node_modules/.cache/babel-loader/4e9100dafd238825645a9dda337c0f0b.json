{"ast":null,"code":"import { createApp } from \"vue\";\nimport { createStore } from 'vuex';\nimport App from \"./App.vue\";\nimport AppModal from \"./components/AppModal.vue\";\nconst app = createApp(App); // Create a new store instance.\n\nconst store = createStore({\n  //state nó giống như data vậy\n  state() {\n    return {\n      userList: [{\n        \"id\": 1,\n        \"name\": \"Đoàn Hải Long\",\n        \"avatar\": \"https://scontent.fhan2-4.fna.fbcdn.net/v/t39.30808-6/269693668_1792401901149374_7750707019832737753_n.jpg?_nc_cat=103&ccb=1-5&_nc_sid=09cbfe&_nc_ohc=OMZEUWJtIxYAX8g98ZZ&tn=tpyT5EWnPz4wjgVW&_nc_ht=scontent.fhan2-4.fna&oh=00_AT9Za2bqzVMU1xmEBURvhmmXVMN9EGv-uVR1XAP9mPeHbg&oe=621D5860\",\n        \"age\": 22,\n        \"description\": \"thân thiện , hoc hỏi nhanh\",\n        \"programmingLanguage\": [\"JS\", \"PHP\", \"C++\"],\n        \"gender\": \"Nam\",\n        \"type\": \"ADMIN\"\n      }, {\n        \"id\": 2,\n        \"name\": \"Trần Quỳnh Giang\",\n        \"avatar\": \"https://scontent.fpnh22-1.fna.fbcdn.net/v/t39.30808-6/269848198_651123699636474_2162510857838246832_n.jpg?_nc_cat=105&ccb=1-5&_nc_sid=09cbfe&_nc_ohc=BREA6jlLduUAX8-w8kU&_nc_ht=scontent.fpnh22-1.fna&oh=00_AT8PdQ46ta5dCSBXt8Ajh1LKaLpdbp6eV7hCRYvVH7u3qg&oe=621CA192\",\n        \"age\": 24,\n        \"description\": \"thân thiện , hoc hỏi nhanh\",\n        \"programmingLanguage\": [\"PHP\", \"C#\"],\n        \"gender\": \"Nữ\",\n        \"type\": \"CLIENT\"\n      }],\n      searchName: \"\"\n    };\n  },\n\n  getters: {\n    userListByBoy(state) {\n      return state.userList.filter(user => user.gender === \"Nam\");\n    },\n\n    /**\r\n     * \r\n     * tìm kiếm user theo Tên\r\n     * đầu tiên từ biến state hệ thống ta lấy ra được searchName và userList\r\n     * tiếp theo kiểm tra xem searchName có nằm trong userList hay không,sử dụng includes\r\n     * toLowercase chỉ có tác dụng là biến chữ hoa thành chữ thường\r\n     * \r\n     */\n    userListBySearchName(state) {\n      const {\n        userList,\n        searchName\n      } = state;\n      return userList.filter(user => user.name.toLowerCase().includes(searchName.toLowerCase()));\n    }\n\n  },\n  mutations: {\n    setSearchNameMutation(state, payload) {\n      state.searchName = payload;\n    },\n\n    addUserMutation(state, payload) {\n      // state.userList = [...state.userList, payload];\n      state.userList.push(payload);\n    },\n\n    removeUserMutation(context, payload) {\n      // Hàm findIndex sẽ trả về key của phần tử đầu tiên trong mảng thỏa mãn được điều kiện kiểm tra(được truyền vào như một hàm).\n      const index = context.userList.findIndex(user => user.id === payload);\n\n      if (index !== -1) {\n        context.userList.splice(index, 1);\n      } else {\n        alert('Không tìm thấy id phù hợp');\n      }\n    },\n\n    updateUserMutation(context, payload) {\n      const index = context.userList.findIndex(user => user.id === payload.id);\n\n      if (index !== -1) {\n        con;\n      } else {\n        alert('Không tìm thấy user phù hợp');\n      }\n    }\n\n  },\n  actions: {\n    setSearchNameAction(context, payload) {\n      //context ở đây hiểu như $this.store.state vậy\n      setTimeout(() => {\n        context.commit(\"setSearchNameMutation\", payload);\n      }, 500);\n    },\n\n    addUserAction(context, payload) {\n      // console.log(context);\n      // console.log(payload);\n      const newUser = { ...payload,\n        id: Math.random()\n      };\n      context.commit(\"addUserMutation\", newUser);\n    },\n\n    removeUserAction(context, payload) {\n      // console.log(context);\n      // console.log(payload);\n      context.commit(\"removeUserMutation\", payload);\n    },\n\n    updateUserAction(state, payload) {\n      state.commit(\"updateUserMutation\", payload);\n    }\n\n  }\n});\napp.use(store);\napp.component(\"app-modal\", AppModal);\napp.mount(\"#app\");","map":{"version":3,"sources":["C:/Users/long.dh/Desktop/learn-vue3/vuejs-cyberlearn/Chap 3-VueX-Form/app-learning-user-mangement/src/main.js"],"names":["createApp","createStore","App","AppModal","app","store","state","userList","searchName","getters","userListByBoy","filter","user","gender","userListBySearchName","name","toLowerCase","includes","mutations","setSearchNameMutation","payload","addUserMutation","push","removeUserMutation","context","index","findIndex","id","splice","alert","updateUserMutation","con","actions","setSearchNameAction","setTimeout","commit","addUserAction","newUser","Math","random","removeUserAction","updateUserAction","use","component","mount"],"mappings":"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","sourcesContent":["import { createApp } from \"vue\";\r\nimport { createStore } from 'vuex'\r\n\r\nimport App from \"./App.vue\";\r\n\r\nimport AppModal from \"./components/AppModal.vue\";\r\nconst app = createApp(App);\r\n\r\n\r\n// Create a new store instance.\r\nconst store = createStore({\r\n    //state nó giống như data vậy\r\n    state() {\r\n        return {\r\n            userList: [{\r\n                    \"id\": 1,\r\n                    \"name\": \"Đoàn Hải Long\",\r\n                    \"avatar\": \"https://scontent.fhan2-4.fna.fbcdn.net/v/t39.30808-6/269693668_1792401901149374_7750707019832737753_n.jpg?_nc_cat=103&ccb=1-5&_nc_sid=09cbfe&_nc_ohc=OMZEUWJtIxYAX8g98ZZ&tn=tpyT5EWnPz4wjgVW&_nc_ht=scontent.fhan2-4.fna&oh=00_AT9Za2bqzVMU1xmEBURvhmmXVMN9EGv-uVR1XAP9mPeHbg&oe=621D5860\",\r\n                    \"age\": 22,\r\n                    \"description\": \"thân thiện , hoc hỏi nhanh\",\r\n                    \"programmingLanguage\": [\"JS\", \"PHP\", \"C++\"],\r\n                    \"gender\": \"Nam\",\r\n                    \"type\": \"ADMIN\"\r\n                },\r\n                {\r\n                    \"id\": 2,\r\n                    \"name\": \"Trần Quỳnh Giang\",\r\n                    \"avatar\": \"https://scontent.fpnh22-1.fna.fbcdn.net/v/t39.30808-6/269848198_651123699636474_2162510857838246832_n.jpg?_nc_cat=105&ccb=1-5&_nc_sid=09cbfe&_nc_ohc=BREA6jlLduUAX8-w8kU&_nc_ht=scontent.fpnh22-1.fna&oh=00_AT8PdQ46ta5dCSBXt8Ajh1LKaLpdbp6eV7hCRYvVH7u3qg&oe=621CA192\",\r\n                    \"age\": 24,\r\n                    \"description\": \"thân thiện , hoc hỏi nhanh\",\r\n                    \"programmingLanguage\": [\"PHP\", \"C#\"],\r\n                    \"gender\": \"Nữ\",\r\n                    \"type\": \"CLIENT\"\r\n                }\r\n            ],\r\n            searchName: \"\"\r\n\r\n        }\r\n\r\n    },\r\n    getters: {\r\n        userListByBoy(state) {\r\n            return state.userList.filter((user) => user.gender === \"Nam\");\r\n\r\n        },\r\n        /**\r\n         * \r\n         * tìm kiếm user theo Tên\r\n         * đầu tiên từ biến state hệ thống ta lấy ra được searchName và userList\r\n         * tiếp theo kiểm tra xem searchName có nằm trong userList hay không,sử dụng includes\r\n         * toLowercase chỉ có tác dụng là biến chữ hoa thành chữ thường\r\n         * \r\n         */\r\n        userListBySearchName(state) {\r\n            const { userList, searchName } = state;\r\n            return userList.filter(\r\n                (user) => user.name.toLowerCase().includes(searchName.toLowerCase())\r\n            )\r\n\r\n        }\r\n    },\r\n    mutations: {\r\n        setSearchNameMutation(state, payload) {\r\n            state.searchName = payload;\r\n        },\r\n        addUserMutation(state, payload) {\r\n            // state.userList = [...state.userList, payload];\r\n            state.userList.push(payload);\r\n        },\r\n        removeUserMutation(context, payload) {\r\n\r\n\r\n            // Hàm findIndex sẽ trả về key của phần tử đầu tiên trong mảng thỏa mãn được điều kiện kiểm tra(được truyền vào như một hàm).\r\n            const index = context.userList.findIndex(user => user.id === payload);\r\n            if (index !== -1) {\r\n                context.userList.splice(index, 1);\r\n            } else {\r\n                alert('Không tìm thấy id phù hợp')\r\n            }\r\n\r\n        },\r\n        updateUserMutation(context, payload) {\r\n            const index = context.userList.findIndex(user => user.id === payload.id);\r\n            if (index !== -1) {\r\n                con\r\n            } else {\r\n                alert('Không tìm thấy user phù hợp')\r\n            }\r\n        }\r\n\r\n    },\r\n    actions: {\r\n        setSearchNameAction(context, payload) {\r\n            //context ở đây hiểu như $this.store.state vậy\r\n            setTimeout(() => {\r\n                context.commit(\"setSearchNameMutation\", payload)\r\n            }, 500)\r\n\r\n        },\r\n        addUserAction(context, payload) {\r\n            // console.log(context);\r\n            // console.log(payload);\r\n\r\n            const newUser = {...payload, id: Math.random() }\r\n            context.commit(\"addUserMutation\", newUser);\r\n        },\r\n        removeUserAction(context, payload) {\r\n            // console.log(context);\r\n            // console.log(payload);\r\n            context.commit(\"removeUserMutation\", payload);\r\n        },\r\n        updateUserAction(state, payload) {\r\n            state.commit(\"updateUserMutation\", payload)\r\n        }\r\n    }\r\n})\r\napp.use(store)\r\napp.component(\"app-modal\", AppModal);\r\n\r\napp.mount(\"#app\");"]},"metadata":{},"sourceType":"module"}