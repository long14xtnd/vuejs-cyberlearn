{"ast":null,"code":"import UserItem from \"./UserItem.vue\";\nimport { createNamespacedHelpers } from \"vuex\";\nconst {\n  mapGetters,\n  mapState,\n  mapActions\n} = createNamespacedHelpers(\"user\");\nexport default {\n  components: {\n    UserItem\n  },\n  // computed:{\n  //   userList(){\n  //     return this.$store.state.userLis\n  //   }\n  // }\n  //====Cách viết mapState theo kiểu mảng ====\n  // computed: mapState([\"userList\"]),\n  //=======Cách viết mapState hay được sử dụng nhất======\n  computed: {\n    loading() {\n      return false;\n    },\n\n    userListByBoy() {\n      return this.$store.getters.userListByBoy;\n    },\n\n    ...mapGetters({\n      userListFilterBoy: \"userListByBoy\",\n      userListBySearchName: \"userListBySearchName\"\n    }),\n    //*** viết có dấu ... như này để phân biệt mapState và có thể viểt các computed khác do người dùng tự tạo */\n    ...mapState({\n      //trong vuejs nó khuyên chúng ta hạn chế cách dùng là this.$store để gọi dữ liệu vì store dữ liệu rất lớn truy cập kiểu như thế là ko nên\n      //chính vì thế nó mới sinh ra một thằng có tên là mapState để ta truy xuất dữ liệu\n      //(state) chỗ này tương đương với this.$store.state\n      userList: state => state.userList // userList : \"userList\" //Đây là cách viết khác nhưng ko nên dùng\n\n    })\n  },\n  methods: { ...mapActions({\n      getAllUser: \"getAllUserAction\"\n    })\n  },\n\n  /**tại sao lại dùng lifecycle created\r\n   * vì khi chúng ta dùng created thì những cái data,state,vuex component nó đã tồn tại rồi thì code tại đây sẽ hạn chế \r\n   * hết mức có thể và sau này có cập nhật nó vào cái biến gì đó nó cũng ko bị lỗi\r\n   */\n  created() {\n    this.getAllUser();\n  }\n\n};","map":{"version":3,"mappings":"AAeA,OAAOA,QAAP,MAAqB,gBAArB;AACA,SAASC,uBAAT,QAAwC,MAAxC;AACA,MAAM;AAAEC,YAAF;AAAcC,UAAd;AAAwBC;AAAxB,IAAuCH,uBAAuB,CAAC,MAAD,CAApE;AAEA,eAAe;AACbI,YAAU,EAAE;AACVL;AADU,GADC;AAIb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAM,UAAQ,EAAE;AACRC,WAAO,GAAG;AACR,aAAO,KAAP;AACD,KAHO;;AAIRC,iBAAa,GAAG;AACd,aAAO,KAAKC,MAAL,CAAYC,OAAZ,CAAoBF,aAA3B;AACD,KANO;;AAOR,OAAGN,UAAU,CAAC;AACZS,uBAAiB,EAAE,eADP;AAEZC,0BAAoB,EAAE;AAFV,KAAD,CAPL;AAWR;AACA,OAAGT,QAAQ,CAAC;AACV;AACA;AACA;AACAU,cAAQ,EAAGC,KAAD,IAAWA,KAAK,CAACD,QAJjB,CAKV;;AALU,KAAD;AAZH,GAZG;AAgCbE,SAAO,EAAE,EACP,GAAGX,UAAU,CAAC;AACZY,gBAAU,EAAE;AADA,KAAD;AADN,GAhCI;;AAsCb;;;;AAIAC,SAAO,GAAG;AACR,SAAKD,UAAL;AACD;;AA5CY,CAAf","names":["UserItem","createNamespacedHelpers","mapGetters","mapState","mapActions","components","computed","loading","userListByBoy","$store","getters","userListFilterBoy","userListBySearchName","userList","state","methods","getAllUser","created"],"sourceRoot":"","sources":["C:\\Users\\long.dh\\Desktop\\learn-vue3\\vuejs-cyberlearn\\Chap 5-Composition API\\app-learning-user-mangement\\src\\components\\UserList.vue"],"sourcesContent":["<template>\r\n  <tbody>\r\n    <user-item\r\n      v-for=\"(user, index) in userListBySearchName\"\r\n      :key=\"index\"\r\n      :user=\"user\"\r\n    ></user-item>\r\n    <!-- <user-item></user-item>\r\n    <user-item></user-item>\r\n    <user-item></user-item>\r\n    <user-item></user-item> -->\r\n  </tbody>\r\n</template>\r\n\r\n<script>\r\nimport UserItem from \"./UserItem.vue\";\r\nimport { createNamespacedHelpers } from \"vuex\";\r\nconst { mapGetters, mapState, mapActions } = createNamespacedHelpers(\"user\");\r\n\r\nexport default {\r\n  components: {\r\n    UserItem,\r\n  },\r\n  // computed:{\r\n  //   userList(){\r\n  //     return this.$store.state.userLis\r\n  //   }\r\n  // }\r\n  //====Cách viết mapState theo kiểu mảng ====\r\n  // computed: mapState([\"userList\"]),\r\n  //=======Cách viết mapState hay được sử dụng nhất======\r\n  computed: {\r\n    loading() {\r\n      return false;\r\n    },\r\n    userListByBoy() {\r\n      return this.$store.getters.userListByBoy;\r\n    },\r\n    ...mapGetters({\r\n      userListFilterBoy: \"userListByBoy\",\r\n      userListBySearchName: \"userListBySearchName\",\r\n    }),\r\n    //*** viết có dấu ... như này để phân biệt mapState và có thể viểt các computed khác do người dùng tự tạo */\r\n    ...mapState({\r\n      //trong vuejs nó khuyên chúng ta hạn chế cách dùng là this.$store để gọi dữ liệu vì store dữ liệu rất lớn truy cập kiểu như thế là ko nên\r\n      //chính vì thế nó mới sinh ra một thằng có tên là mapState để ta truy xuất dữ liệu\r\n      //(state) chỗ này tương đương với this.$store.state\r\n      userList: (state) => state.userList,\r\n      // userList : \"userList\" //Đây là cách viết khác nhưng ko nên dùng\r\n    }),\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      getAllUser: \"getAllUserAction\",\r\n    }),\r\n  },\r\n  \r\n  /**tại sao lại dùng lifecycle created\r\n   * vì khi chúng ta dùng created thì những cái data,state,vuex component nó đã tồn tại rồi thì code tại đây sẽ hạn chế \r\n   * hết mức có thể và sau này có cập nhật nó vào cái biến gì đó nó cũng ko bị lỗi\r\n   */\r\n  created() {\r\n    this.getAllUser();\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}