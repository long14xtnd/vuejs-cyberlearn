{"ast":null,"code":"import { ref } from \"vue\"; // import { createNamespacedHelpers } from \"vuex\";\n\nimport { useStore } from \"vuex\"; // const { mapActions } = createNamespacedHelpers(\"user\");\n\nimport FormUser from \"./FormUser.vue\";\nexport default {\n  components: {\n    FormUser\n  },\n  props: {\n    user: {\n      type: Object\n    }\n  },\n\n  setup() {\n    const store = useStore();\n    const isOpenModalEdit = ref(false);\n\n    function handleModalEdit() {\n      isOpenModalEdit.value = true;\n    }\n\n    function handleCloseModalEdit() {\n      this.isOpenModalEdit.value = false;\n    }\n\n    function handleRemoveUser(user) {\n      store.dispatch(\"user/removeUserAction\", user);\n    }\n\n    return {\n      isOpenModalEdit,\n      handleCloseModalEdit,\n      handleModalEdit,\n      handleRemoveUser\n    };\n  } // data() {\n  //   return {\n  //     isOpenModalEdit: false,\n  //   };\n  // },\n  // methods: {\n  //   handleModalEdit() {\n  //     this.isOpenModalEdit = true;\n  //   },\n  //   handleCloseModalEdit() {\n  //     this.isOpenModalEdit = false;\n  //   },\n  //   ...mapActions({\n  //     handleRemoveUser: \"removeUserAction\",\n  //   }),\n  // },\n\n\n};","map":{"version":3,"mappings":"AA4CA,SAASA,GAAT,QAAoB,KAApB,C,CACA;;AACA,SAASC,QAAT,QAAyB,MAAzB,C,CACA;;AAEA,OAAOC,QAAP,MAAqB,gBAArB;AACA,eAAe;AACbC,YAAU,EAAE;AACVD;AADU,GADC;AAIbE,OAAK,EAAE;AACLC,QAAI,EAAE;AACJC,UAAI,EAAEC;AADF;AADD,GAJM;;AASbC,OAAK,GAAG;AACN,UAAMC,KAAI,GAAIR,QAAQ,EAAtB;AACA,UAAMS,eAAc,GAAIV,GAAG,CAAC,KAAD,CAA3B;;AACA,aAASW,eAAT,GAA2B;AACzBD,qBAAe,CAACE,KAAhB,GAAwB,IAAxB;AACF;;AACA,aAASC,oBAAT,GAAgC;AAC9B,WAAKH,eAAL,CAAqBE,KAArB,GAA6B,KAA7B;AACF;;AACA,aAASE,gBAAT,CAA0BT,IAA1B,EAAgC;AAC9BI,WAAK,CAACM,QAAN,CAAe,uBAAf,EAAuCV,IAAvC;AACF;;AACA,WAAO;AACLK,qBADK;AAELG,0BAFK;AAGLF,qBAHK;AAILG;AAJK,KAAP;AAMD,GA3BY,CA4Bb;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA5Ca,CAAf","names":["ref","useStore","FormUser","components","props","user","type","Object","setup","store","isOpenModalEdit","handleModalEdit","value","handleCloseModalEdit","handleRemoveUser","dispatch"],"sourceRoot":"","sources":["C:\\Users\\long.dh\\Desktop\\learn-vue3\\vuejs-cyberlearn\\Chap 5-Composition API\\app-learning-user-mangement\\src\\components\\UserItem.vue"],"sourcesContent":["<template>\r\n  <tr>\r\n    <td>\r\n      <img :src=\"user.avatar\" class=\"mr-2\" alt=\"image\" />\r\n      {{ user.name }}\r\n    </td>\r\n    <td>{{ user.age }}</td>\r\n    <td>\r\n      <label\r\n        v-for=\"(proLang, index) in user.programmingLanguage\"\r\n        :key=\"index\"\r\n        class=\"badge badge-gradient-primary mr-2\"\r\n        >{{ proLang }}</label\r\n      >\r\n    </td>\r\n    <td>{{ user.gender }}</td>\r\n    <td>\r\n      <button\r\n        type=\"button\"\r\n        class=\"mr-2 btn btn-gradient-danger btn-icon-text\"\r\n        @click=\"handleRemoveUser(user.id)\"\r\n      >\r\n        <i class=\"mdi mdi-delete btn-icon-prepend\"></i> Remove\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-gradient-info btn-icon-text\"\r\n        @click=\"handleModalEdit\"\r\n      >\r\n        <i class=\"mdi mdi-border-color btn-icon-prepend\"></i> Edit\r\n      </button>\r\n    </td>\r\n  </tr>\r\n  <teleport to=\"#app\">\r\n    <app-modal\r\n      :isOpen=\"isOpenModalEdit\"\r\n      :handelCloseModal=\"handleCloseModalEdit\"\r\n    >\r\n      <form-user :userInfo=\"user\"></form-user>\r\n    </app-modal>\r\n  </teleport>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from \"vue\";\r\n// import { createNamespacedHelpers } from \"vuex\";\r\nimport { useStore } from \"vuex\";\r\n// const { mapActions } = createNamespacedHelpers(\"user\");\r\n\r\nimport FormUser from \"./FormUser.vue\";\r\nexport default {\r\n  components: {\r\n    FormUser,\r\n  },\r\n  props: {\r\n    user: {\r\n      type: Object,\r\n    },\r\n  },\r\n  setup() {\r\n    const store = useStore();\r\n    const isOpenModalEdit = ref(false);\r\n    function handleModalEdit() {\r\n      isOpenModalEdit.value = true;\r\n    }\r\n    function handleCloseModalEdit() {\r\n      this.isOpenModalEdit.value = false;\r\n    }\r\n    function handleRemoveUser(user) {\r\n      store.dispatch(\"user/removeUserAction\",user);\r\n    }\r\n    return {\r\n      isOpenModalEdit,\r\n      handleCloseModalEdit,\r\n      handleModalEdit,\r\n      handleRemoveUser,\r\n    };\r\n  },\r\n  // data() {\r\n  //   return {\r\n  //     isOpenModalEdit: false,\r\n  //   };\r\n  // },\r\n\r\n  // methods: {\r\n  //   handleModalEdit() {\r\n  //     this.isOpenModalEdit = true;\r\n  //   },\r\n  //   handleCloseModalEdit() {\r\n  //     this.isOpenModalEdit = false;\r\n  //   },\r\n  //   ...mapActions({\r\n  //     handleRemoveUser: \"removeUserAction\",\r\n  //   }),\r\n  // },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}