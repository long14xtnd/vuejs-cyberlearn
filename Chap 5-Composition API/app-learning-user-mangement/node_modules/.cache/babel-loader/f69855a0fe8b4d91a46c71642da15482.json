{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_user_item = _resolveComponent(\"user-item\");\n\n  return _openBlock(), _createElementBlock(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.userListBySearchName, (user, index) => {\n    return _openBlock(), _createBlock(_component_user_item, {\n      key: index,\n      user: user\n    }, null, 8\n    /* PROPS */\n    , [\"user\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]);\n}","map":{"version":3,"mappings":";;;;uBACEA,oBAMQ,OANR,EAMQ,IANR,EAMQ,oBALNA,oBAIaC,SAJb,EAIa,IAJb,EAIaC,YAHaC,yBAGb,EAHiC,CAApCC,IAAoC,EAA9BC,KAA8B,KAAzB;yBADrBC,aAIaC,oBAJb,EAIa;AAFVC,SAAG,EAAEH,KAEK;AADVD,UAAI,EAAEA;AACI,KAJb;;AAAA;GAIa,CAJb;;AAAA,GAKM,EANR","names":["_createElementBlock","_Fragment","_renderList","_ctx","user","index","_createBlock","_component_user_item","key"],"sourceRoot":"","sources":["C:\\Users\\long.dh\\Desktop\\learn-vue3\\vuejs-cyberlearn\\Chap 5-Composition API\\app-learning-user-mangement\\src\\components\\UserList.vue"],"sourcesContent":["<template>\r\n  <tbody>\r\n    <user-item\r\n      v-for=\"(user, index) in userListBySearchName\"\r\n      :key=\"index\"\r\n      :user=\"user\"\r\n    ></user-item>\r\n  </tbody>\r\n</template>\r\n\r\n<script>\r\nimport UserItem from \"./UserItem.vue\";\r\nimport { createNamespacedHelpers } from \"vuex\";\r\nconst { mapState, mapGetters, mapActions } = createNamespacedHelpers(\"user\");\r\nexport default {\r\n  components: {\r\n    UserItem,\r\n  },\r\n  props: {},\r\n  data: function () {\r\n    return {};\r\n  },\r\n  watch: {},\r\n  // computed: mapState([\"userList\"]),\r\n  computed: {\r\n    loading() {\r\n      return false;\r\n    },\r\n    ...mapState({\r\n      userList: (state) => state.userList,\r\n      // users: \"userList\",\r\n    }),\r\n    ...mapGetters({\r\n      userListFilterBoy: \"userListByBoy\",\r\n      userListBySearchName: \"userListBySearchName\",\r\n    }),\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      getAllUser: \"getAllUserAction\",\r\n    }),\r\n  },\r\n  created() {\r\n    this.getAllUser();\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}