{"ast":null,"code":"import { props, toRefs } from \"vue\";\nexport default {\n  props: {\n    isOpen: {\n      type: Boolean\n    },\n    handelCloseModal: {\n      type: Function\n    }\n  },\n\n  setup(props) {\n    const isOpen = toRefs(props);\n    const handelCloseModal = toRefs(props);\n\n    function hanldeClose() {\n      this.handelCloseModal();\n    }\n\n    return {\n      isOpen,\n      handelCloseModal\n    };\n  },\n\n  methods: {\n    hanldeClose() {\n      this.handelCloseModal();\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAgBA,SAASA,KAAT,EAAgBC,MAAhB,QAA8B,KAA9B;AACA,eAAe;AACbD,OAAK,EAAE;AACLE,UAAM,EAAE;AACNC,UAAI,EAAEC;AADA,KADH;AAILC,oBAAgB,EAAE;AAChBF,UAAI,EAAEG;AADU;AAJb,GADM;;AASbC,OAAK,CAACP,KAAD,EAAQ;AACX,UAAME,MAAK,GAAID,MAAM,CAACD,KAAD,CAArB;AACA,UAAMK,gBAAe,GAAIJ,MAAM,CAACD,KAAD,CAA/B;;AACA,aAASQ,WAAT,GAAuB;AACrB,WAAKH,gBAAL;AACF;;AACA,WAAO;AAAEH,YAAF;AAAUG;AAAV,KAAP;AACD,GAhBY;;AAiBbI,SAAO,EAAE;AACPD,eAAW,GAAG;AACZ,WAAKH,gBAAL;AACD;;AAHM;AAjBI,CAAf","names":["props","toRefs","isOpen","type","Boolean","handelCloseModal","Function","setup","hanldeClose","methods"],"sourceRoot":"","sources":["C:\\Users\\long.dh\\Desktop\\learn-vue3\\vuejs-cyberlearn\\Chap 5-Composition API\\app-learning-user-mangement\\src\\components\\AppModal.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"isOpen\" class=\"modal\" @click=\"hanldeClose\">\r\n    <div class=\"modal__container\" @click.stop>\r\n      <div class=\"modal__header\">\r\n        <h1 class=\"modal__title\">Form</h1>\r\n        <div class=\"modal__close\" @click=\"hanldeClose\">X</div>\r\n      </div>\r\n      <div class=\"modal__body\">\r\n        <slot></slot>\r\n      </div>\r\n      <div class=\"modal__footer\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { props, toRefs } from \"vue\";\r\nexport default {\r\n  props: {\r\n    isOpen: {\r\n      type: Boolean,\r\n    },\r\n    handelCloseModal: {\r\n      type: Function,\r\n    },\r\n  },\r\n  setup(props) {\r\n    const isOpen = toRefs(props);\r\n    const handelCloseModal = toRefs(props);\r\n    function hanldeClose() {\r\n      this.handelCloseModal();\r\n    }\r\n    return { isOpen, handelCloseModal };\r\n  },\r\n  methods: {\r\n    hanldeClose() {\r\n      this.handelCloseModal();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.modal {\r\n  position: fixed;\r\n  z-index: 9999;\r\n  left: 0;\r\n  top: 0;\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.4);\r\n}\r\n.modal__container {\r\n  width: 800px;\r\n  height: 70vh;\r\n  overflow-y: scroll;\r\n  margin: auto;\r\n  margin-top: 100px;\r\n  background: white;\r\n  border: 1px solid #888;\r\n  padding: 10px 20px;\r\n}\r\n\r\n.modal__container::-webkit-scrollbar {\r\n  width: 3px;\r\n}\r\n\r\n.modal__container::-webkit-scrollbar-track {\r\n  box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.modal__container::-webkit-scrollbar-thumb {\r\n  background-color: darkgrey;\r\n  outline: 1px solid slategrey;\r\n}\r\n\r\n.modal__header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.modal__close {\r\n  width: 50px;\r\n  height: 50px;\r\n  line-height: 50px;\r\n  border-radius: 50%;\r\n  text-align: center;\r\n  font-size: 30px;\r\n}\r\n.modal__close:hover {\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}