{"ast":null,"code":"import UserItem from \"./UserItem.vue\";\nimport { useStore } from \"vuex\";\nimport { computed } from \"vue\"; // import { createNamespacedHelpers } from \"vuex\";\n// const { mapGetters, mapState, mapActions } = createNamespacedHelpers(\"user\");\n\nexport default {\n  components: {\n    UserItem\n  },\n\n  setup() {\n    const store = useStore();\n\n    function loading() {\n      return false;\n    } // const userListByBoy = computed(() => store.getters.userListByBoy);\n    // function userListByBoy() {\n    //   return store.getters.userListByBoy;\n    // }\n    // const userListFilterBoy = computed(() =>\n    //   store.commit(\"user/userListByBoy\")\n    // );\n    // function userListFilterBoy() {\n    //   store.commit(\"user/userListByBoy\");\n    // }\n    // const userListBySearchName = computed(() =>\n    //   store.commit(\"user/userListBySearchName\")\n    // );\n\n\n    function userListBySearchName() {\n      store.commit(\"user/userListBySearchName\");\n    } // const getAllUser = computed(() =>\n    //       store.dispatch(\"user/getAllUserAction\")\n    // );\n\n\n    function getAllUser() {\n      store.dispatch(\"user/getAllUserAction\");\n    }\n\n    const userList = computed(() => store.state.userList);\n    getAllUser();\n    return {\n      getAllUser,\n      loading,\n      userListBySearchName,\n      userList\n    };\n  } // computed:{\n  //   userList(){\n  //     return this.$store.state.userLis\n  //   }\n  // }\n  //====Cách viết mapState theo kiểu mảng ====\n  // computed: mapState([\"userList\"]),\n  //=======Cách viết mapState hay được sử dụng nhất======\n  // computed: {\n  //   // loading() {\n  //   //   return false;\n  //   // },\n  //   // userListByBoy() {\n  //   //   return this.$store.getters.userListByBoy;\n  //   // },\n  //   // ...mapGetters({\n  //   //   userListFilterBoy: \"userListByBoy\",\n  //   //   userListBySearchName: \"userListBySearchName\",\n  //   // }),\n  //   //*** viết có dấu ... như này để phân biệt mapState và có thể viểt các computed khác do người dùng tự tạo */\n  //   // ...mapState({\n  //   //   //trong vuejs nó khuyên chúng ta hạn chế cách dùng là this.$store để gọi dữ liệu vì store dữ liệu rất lớn truy cập kiểu như thế là ko nên\n  //   //   //chính vì thế nó mới sinh ra một thằng có tên là mapState để ta truy xuất dữ liệu\n  //   //   //(state) chỗ này tương đương với this.$store.state\n  //   //   userList: (state) => state.userList,\n  //   //   // userList : \"userList\" //Đây là cách viết khác nhưng ko nên dùng\n  //   // }),\n  // },\n  // methods: {\n  //   ...mapActions({\n  //     getAllUser: \"getAllUserAction\",\n  //   }),\n  // },\n\n  /**tại sao lại dùng lifecycle created\r\n   * vì khi chúng ta dùng created thì những cái data,state,vuex component nó đã tồn tại rồi thì code tại đây sẽ hạn chế\r\n   * hết mức có thể và sau này có cập nhật nó vào cái biến gì đó nó cũng ko bị lỗi\r\n   */\n  // created() {\n  //   this.getAllUser();\n  // },\n\n\n};","map":{"version":3,"mappings":"AAeA,OAAOA,QAAP,MAAqB,gBAArB;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,SAASC,QAAT,QAAyB,KAAzB,C,CACA;AACA;;AAEA,eAAe;AACbC,YAAU,EAAE;AACVH;AADU,GADC;;AAIbI,OAAK,GAAG;AACN,UAAMC,KAAI,GAAIJ,QAAQ,EAAtB;;AAEA,aAASK,OAAT,GAAmB;AACjB,aAAO,KAAP;AACF,KALM,CAMN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,aAASC,oBAAT,GAAgC;AAC9BF,WAAK,CAACG,MAAN,CAAa,2BAAb;AACF,KArBM,CAsBN;AACA;AACA;;;AACA,aAASC,UAAT,GAAsB;AACpBJ,WAAK,CAACK,QAAN,CAAe,uBAAf;AACF;;AACA,UAAMC,QAAO,GAAIT,QAAQ,CAAC,MAAMG,KAAK,CAACO,KAAN,CAAYD,QAAnB,CAAzB;AACAF,cAAU;AACV,WAAO;AACLA,gBADK;AAELH,aAFK;AAILC,0BAJK;AAKLI;AALK,KAAP;AAOD,GAzCY,CA0Cb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA;;;AAlFa,CAAf","names":["UserItem","useStore","computed","components","setup","store","loading","userListBySearchName","commit","getAllUser","dispatch","userList","state"],"sourceRoot":"","sources":["C:\\Users\\long.dh\\Desktop\\learn-vue3\\vuejs-cyberlearn\\Chap 5-Composition API\\app-learning-user-mangement\\src\\components\\UserList.vue"],"sourcesContent":["<template>\r\n  <tbody>\r\n    <user-item\r\n      v-for=\"(user, index) in userListBySearchName\"\r\n      :key=\"index\"\r\n      :user=\"user\"\r\n    ></user-item>\r\n    <!-- <user-item></user-item>\r\n    <user-item></user-item>\r\n    <user-item></user-item>\r\n    <user-item></user-item> -->\r\n  </tbody>\r\n</template>\r\n\r\n<script>\r\nimport UserItem from \"./UserItem.vue\";\r\nimport { useStore } from \"vuex\";\r\nimport { computed } from \"vue\";\r\n// import { createNamespacedHelpers } from \"vuex\";\r\n// const { mapGetters, mapState, mapActions } = createNamespacedHelpers(\"user\");\r\n\r\nexport default {\r\n  components: {\r\n    UserItem,\r\n  },\r\n  setup() {\r\n    const store = useStore();\r\n\r\n    function loading() {\r\n      return false;\r\n    }\r\n    // const userListByBoy = computed(() => store.getters.userListByBoy);\r\n    // function userListByBoy() {\r\n    //   return store.getters.userListByBoy;\r\n    // }\r\n    // const userListFilterBoy = computed(() =>\r\n    //   store.commit(\"user/userListByBoy\")\r\n    // );\r\n    // function userListFilterBoy() {\r\n    //   store.commit(\"user/userListByBoy\");\r\n    // }\r\n    // const userListBySearchName = computed(() =>\r\n    //   store.commit(\"user/userListBySearchName\")\r\n    // );\r\n    function userListBySearchName() {\r\n      store.commit(\"user/userListBySearchName\");\r\n    }\r\n    // const getAllUser = computed(() =>\r\n    //       store.dispatch(\"user/getAllUserAction\")\r\n    // );\r\n    function getAllUser() {\r\n      store.dispatch(\"user/getAllUserAction\");\r\n    }\r\n    const userList = computed(() => store.state.userList);\r\n    getAllUser();\r\n    return {\r\n      getAllUser,\r\n      loading,\r\n     \r\n      userListBySearchName,\r\n      userList,\r\n    };\r\n  },\r\n  // computed:{\r\n  //   userList(){\r\n  //     return this.$store.state.userLis\r\n  //   }\r\n  // }\r\n  //====Cách viết mapState theo kiểu mảng ====\r\n  // computed: mapState([\"userList\"]),\r\n  //=======Cách viết mapState hay được sử dụng nhất======\r\n  // computed: {\r\n  //   // loading() {\r\n  //   //   return false;\r\n  //   // },\r\n  //   // userListByBoy() {\r\n  //   //   return this.$store.getters.userListByBoy;\r\n  //   // },\r\n  //   // ...mapGetters({\r\n  //   //   userListFilterBoy: \"userListByBoy\",\r\n  //   //   userListBySearchName: \"userListBySearchName\",\r\n  //   // }),\r\n  //   //*** viết có dấu ... như này để phân biệt mapState và có thể viểt các computed khác do người dùng tự tạo */\r\n  //   // ...mapState({\r\n  //   //   //trong vuejs nó khuyên chúng ta hạn chế cách dùng là this.$store để gọi dữ liệu vì store dữ liệu rất lớn truy cập kiểu như thế là ko nên\r\n  //   //   //chính vì thế nó mới sinh ra một thằng có tên là mapState để ta truy xuất dữ liệu\r\n  //   //   //(state) chỗ này tương đương với this.$store.state\r\n  //   //   userList: (state) => state.userList,\r\n  //   //   // userList : \"userList\" //Đây là cách viết khác nhưng ko nên dùng\r\n  //   // }),\r\n  // },\r\n  // methods: {\r\n  //   ...mapActions({\r\n  //     getAllUser: \"getAllUserAction\",\r\n  //   }),\r\n  // },\r\n\r\n  /**tại sao lại dùng lifecycle created\r\n   * vì khi chúng ta dùng created thì những cái data,state,vuex component nó đã tồn tại rồi thì code tại đây sẽ hạn chế\r\n   * hết mức có thể và sau này có cập nhật nó vào cái biến gì đó nó cũng ko bị lỗi\r\n   */\r\n  // created() {\r\n  //   this.getAllUser();\r\n  // },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}