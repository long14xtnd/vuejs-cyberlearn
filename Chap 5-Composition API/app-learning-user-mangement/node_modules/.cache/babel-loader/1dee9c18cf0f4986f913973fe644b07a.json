{"ast":null,"code":"import { ref } from 'vue';\nimport { createNamespacedHelpers } from 'vuex';\nconst {\n  mapActions\n} = createNamespacedHelpers(\"user\");\nimport FormUser from \"./FormUser.vue\";\nexport default {\n  components: {\n    FormUser\n  },\n  props: {\n    user: {\n      type: Object\n    }\n  },\n\n  setup() {\n    const isOpenModalEdit = ref(false);\n\n    function handleModalEdit() {\n      this.isOpenModalEdit = true;\n    }\n\n    function handleModalEdit() {\n      this.isOpenModalEdit = true;\n    }\n\n    function handleCloseModalEdit() {\n      this.isOpenModalEdit = false;\n    }\n\n    return {\n      isOpenModalEdit\n    };\n  },\n\n  // data() {\n  //   return {\n  //     isOpenModalEdit: false,\n  //   };\n  // },\n  methods: {\n    handleModalEdit() {\n      this.isOpenModalEdit = true;\n    },\n\n    handleCloseModalEdit() {\n      this.isOpenModalEdit = false;\n    },\n\n    ...mapActions({\n      handleRemoveUser: \"removeUserAction\"\n    })\n  }\n};","map":{"version":3,"mappings":"AA4CA,SAASA,GAAT,QAAoB,KAApB;AACA,SAASC,uBAAT,QAAwC,MAAxC;AACA,MAAM;AAACC;AAAD,IAAaD,uBAAuB,CAAC,MAAD,CAA1C;AAEA,OAAOE,QAAP,MAAqB,gBAArB;AACA,eAAe;AACbC,YAAU,EAAE;AACVD;AADU,GADC;AAIZE,OAAK,EAAE;AACNC,QAAI,EAAE;AACJC,UAAI,EAAEC;AADF;AADA,GAJK;;AASbC,OAAK,GAAG;AACN,UAAMC,eAAc,GAAIV,GAAG,CAAC,KAAD,CAA3B;;AACA,aAASW,eAAT,GAA2B;AACzB,WAAKD,eAAL,GAAuB,IAAvB;AACF;;AACA,aAASC,eAAT,GAA2B;AACzB,WAAKD,eAAL,GAAuB,IAAvB;AACF;;AACA,aAASE,oBAAT,GAAgC;AAC9B,WAAKF,eAAL,GAAuB,KAAvB;AACF;;AACA,WAAM;AAACA;AAAD,KAAN;AACD,GArBY;;AAsBb;AACA;AACA;AACA;AACA;AAEAG,SAAO,EAAE;AACPF,mBAAe,GAAG;AAChB,WAAKD,eAAL,GAAuB,IAAvB;AACD,KAHM;;AAIPE,wBAAoB,GAAG;AACrB,WAAKF,eAAL,GAAuB,KAAvB;AACD,KANM;;AAOP,OAAGR,UAAU,CAAC;AACZY,sBAAgB,EAAE;AADN,KAAD;AAPN;AA5BI,CAAf","names":["ref","createNamespacedHelpers","mapActions","FormUser","components","props","user","type","Object","setup","isOpenModalEdit","handleModalEdit","handleCloseModalEdit","methods","handleRemoveUser"],"sourceRoot":"","sources":["C:\\Users\\long.dh\\Desktop\\learn-vue3\\vuejs-cyberlearn\\Chap 5-Composition API\\app-learning-user-mangement\\src\\components\\UserItem.vue"],"sourcesContent":["<template>\r\n  <tr>\r\n    <td>\r\n      <img :src=\"user.avatar\" class=\"mr-2\" alt=\"image\" />\r\n      {{ user.name }}\r\n    </td>\r\n    <td>{{ user.age }}</td>\r\n    <td>\r\n      <label\r\n        v-for=\"(proLang, index) in user.programmingLanguage\"\r\n        :key=\"index\"\r\n        class=\"badge badge-gradient-primary mr-2\"\r\n        >{{ proLang }}</label\r\n      >\r\n    </td>\r\n    <td>{{ user.gender }}</td>\r\n    <td>\r\n      <button\r\n        type=\"button\"\r\n        class=\"mr-2 btn btn-gradient-danger btn-icon-text\"\r\n        @click=\"handleRemoveUser(user.id)\"\r\n      >\r\n        <i class=\"mdi mdi-delete btn-icon-prepend\"></i> Remove\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-gradient-info btn-icon-text\"\r\n        @click=\"handleModalEdit\"\r\n      >\r\n        <i class=\"mdi mdi-border-color btn-icon-prepend\"></i> Edit\r\n      </button>\r\n    </td>\r\n  </tr>\r\n  <teleport to=\"#app\">\r\n    <app-modal\r\n      :isOpen=\"isOpenModalEdit\"\r\n      :handelCloseModal=\"handleCloseModalEdit\"\r\n    >\r\n      <form-user :userInfo=\"user\"></form-user>\r\n    </app-modal>\r\n  </teleport>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue'\r\nimport { createNamespacedHelpers } from 'vuex'\r\nconst {mapActions}=createNamespacedHelpers(\"user\")\r\n\r\nimport FormUser from \"./FormUser.vue\";\r\nexport default {\r\n  components: {\r\n    FormUser\r\n  },\r\n   props: {\r\n    user: {\r\n      type: Object,\r\n    },\r\n  },\r\n  setup() {\r\n    const isOpenModalEdit = ref(false)\r\n    function handleModalEdit() {\r\n      this.isOpenModalEdit = true;\r\n    }\r\n    function handleModalEdit() {\r\n      this.isOpenModalEdit = true;\r\n    }\r\n    function handleCloseModalEdit() {\r\n      this.isOpenModalEdit = false;\r\n    }\r\n    return{isOpenModalEdit,}\r\n  },\r\n  // data() {\r\n  //   return {\r\n  //     isOpenModalEdit: false,\r\n  //   };\r\n  // },\r\n \r\n  methods: {\r\n    handleModalEdit() {\r\n      this.isOpenModalEdit = true;\r\n    },\r\n    handleCloseModalEdit() {\r\n      this.isOpenModalEdit = false;\r\n    },\r\n    ...mapActions({\r\n      handleRemoveUser: \"removeUserAction\",\r\n    }),\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}