{"remainingRequest":"C:\\Users\\long.dh\\Desktop\\learn-vue3\\vuejs-cyberlearn\\Chap 5-Composition API\\learning-composition-api\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\long.dh\\Desktop\\learn-vue3\\vuejs-cyberlearn\\Chap 5-Composition API\\learning-composition-api\\src\\components\\LearningVuex.vue?vue&type=template&id=f53ea7c0","dependencies":[{"path":"C:\\Users\\long.dh\\Desktop\\learn-vue3\\vuejs-cyberlearn\\Chap 5-Composition API\\learning-composition-api\\src\\components\\LearningVuex.vue","mtime":1646625300785},{"path":"C:\\Users\\long.dh\\Desktop\\learn-vue3\\vuejs-cyberlearn\\Chap 5-Composition API\\learning-composition-api\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1646369923622},{"path":"C:\\Users\\long.dh\\Desktop\\learn-vue3\\vuejs-cyberlearn\\Chap 5-Composition API\\learning-composition-api\\node_modules\\babel-loader\\lib\\index.js","mtime":1646369924621},{"path":"C:\\Users\\long.dh\\Desktop\\learn-vue3\\vuejs-cyberlearn\\Chap 5-Composition API\\learning-composition-api\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1646369925338},{"path":"C:\\Users\\long.dh\\Desktop\\learn-vue3\\vuejs-cyberlearn\\Chap 5-Composition API\\learning-composition-api\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1646369923622},{"path":"C:\\Users\\long.dh\\Desktop\\learn-vue3\\vuejs-cyberlearn\\Chap 5-Composition API\\learning-composition-api\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1646369924851}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIDxkaXYgY2xhc3M9ImNhcmQgdGV4dC1sZWZ0IG10LTIiPg0KICAgIDxkaXYgY2xhc3M9ImNhcmQtYm9keSB0ZXh0LWNlbnRlciI+DQogICAgICA8aDQgY2xhc3M9ImNhcmQtdGl0bGUiPlZ1ZVg8L2g0Pg0KICAgICAgPHAgY2xhc3M9ImJhZGdlIGJhZGdlLXNlY29uZGFyeSI+Q291bnQgOnt7IGNvdW50IH19PC9wPg0KICAgICAgPGRpdj4NCiAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1kYW5nZXIiIEBjbGljaz0iaW5jcmVtZW50Q291bnQiPg0KICAgICAgICAgIEluY3JlbWVudA0KICAgICAgICA8L2J1dHRvbj4NCiAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KICA8L2Rpdj4NCg=="},{"version":3,"sources":["C:\\Users\\long.dh\\Desktop\\learn-vue3\\vuejs-cyberlearn\\Chap 5-Composition API\\learning-composition-api\\src\\components\\LearningVuex.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAChC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC/B,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MACtD,CAAC,CAAC,CAAC,CAAC;QACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACV,CAAC,CAAC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/long.dh/Desktop/learn-vue3/vuejs-cyberlearn/Chap 5-Composition API/learning-composition-api/src/components/LearningVuex.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div class=\"card text-left mt-2\">\r\n    <div class=\"card-body text-center\">\r\n      <h4 class=\"card-title\">VueX</h4>\r\n      <p class=\"badge badge-secondary\">Count :{{ count }}</p>\r\n      <div>\r\n        <button class=\"btn btn-danger\" @click=\"incrementCount\">\r\n          Increment\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { computed } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nexport default {\r\n  setup() {\r\n    const store = useStore();\r\n    const count = computed(() => store.state.count);\r\n    function incrementCount() {\r\n      store.commit(\"incrementAction\");\r\n    }\r\n    return {\r\n      count,\r\n      incrementCount,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"]}]}